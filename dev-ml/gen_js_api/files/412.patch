Index: gen_js_api-1.0.6/ppx-driver/gen_js_api_ppx_driver.ml
===================================================================
--- gen_js_api-1.0.6.orig/ppx-driver/gen_js_api_ppx_driver.ml
+++ gen_js_api-1.0.6/ppx-driver/gen_js_api_ppx_driver.ml
@@ -1,9 +1,9 @@
-module Selected = Ppxlib.Select_ast(Ppxlib_ast__Versions.OCaml_411)
+module Selected = Ppxlib.Select_ast(Ppxlib_ast__Versions.OCaml_412)
 
-let copy_attribute (a : Migrate_parsetree.Ast_411.Parsetree.attribute)
+let copy_attribute (a : Migrate_parsetree.Ast_412.Parsetree.attribute)
   : Ppxlib.Ast.attribute =
-  let pat : Migrate_parsetree.Ast_411.Parsetree.pattern =
-    Ppxlib_ast.Ast_helper.Pat.any ~attrs:[a] ()
+  let pat : Migrate_parsetree.Ast_412.Parsetree.pattern =
+    Migrate_parsetree.Migrate_411_412.copy_pattern (Ppxlib_ast.Ast_helper.Pat.any ~attrs:[Migrate_parsetree.Migrate_412_411.copy_attribute a] ())
   in
   let pat = Selected.Of_ocaml.copy_pattern pat in
   List.hd pat.ppat_attributes
@@ -30,6 +30,6 @@ let () =
   in
   Ppxlib.Driver.register_transformation
     "gen_js_api"
-    ~impl:(fun str -> mapper.structure mapper str)
+    ~impl:(fun str -> List.map Migrate_parsetree.Migrate_412_411.copy_structure_item (mapper.structure mapper (List.map Migrate_parsetree.Migrate_411_412.copy_structure_item str)))
     ~intf:(fun sig_ ->
-      mapper_for_sig.signature mapper_for_sig sig_)
+      List.map Migrate_parsetree.Migrate_412_411.copy_signature_item (mapper_for_sig.signature mapper_for_sig (List.map Migrate_parsetree.Migrate_411_412.copy_signature_item sig_)))
Index: gen_js_api-1.0.6/ppx-lib/gen_js_api_ppx.ml
===================================================================
--- gen_js_api-1.0.6.orig/ppx-lib/gen_js_api_ppx.ml
+++ gen_js_api-1.0.6/ppx-lib/gen_js_api_ppx.ml
@@ -2,7 +2,7 @@
 (* See the attached LICENSE file.                                         *)
 (* Copyright 2015 by LexiFi.                                              *)
 
-open Migrate_parsetree.Ast_411
+open Migrate_parsetree.Ast_412
 
 open Location
 open Asttypes
@@ -1260,7 +1260,7 @@ and gen_funs ~global_attrs p =
   let force_opt x = try (Some (Lazy.force x)) with Error (_, Union_without_discriminator) -> None in
   let of_js, to_js = force_opt of_js, force_opt to_js in
   match p.ptype_params with
-  | [{ptyp_desc = Ptyp_any; ptyp_loc = _; ptyp_attributes = _; ptyp_loc_stack = _}, Invariant] ->
+  | [{ptyp_desc = Ptyp_any; ptyp_loc = _; ptyp_attributes = _; ptyp_loc_stack = _}, (NoVariance,_)] ->
       begin match to_js with
       | None -> []
       | Some to_js ->
@@ -1597,8 +1597,8 @@ let specs =
 let usage = "gen_js_api [-o mymodule.ml] mymodule.mli"
 
 
-module From_current = Ppxlib_ast__Versions.Convert(Ppxlib_ast__Versions.OCaml_current)(Ppxlib_ast__Versions.OCaml_411)
-module To_current = Ppxlib_ast__Versions.Convert(Ppxlib_ast__Versions.OCaml_411)(Ppxlib_ast__Versions.OCaml_current)
+module From_current = Ppxlib_ast__Versions.Convert(Ppxlib_ast__Versions.OCaml_current)(Ppxlib_ast__Versions.OCaml_412)
+module To_current = Ppxlib_ast__Versions.Convert(Ppxlib_ast__Versions.OCaml_412)(Ppxlib_ast__Versions.OCaml_current)
 
 let standalone () =
   let files = ref [] in
Index: gen_js_api-1.0.6/ppx-lib/gen_js_api_ppx.mli
===================================================================
--- gen_js_api-1.0.6.orig/ppx-lib/gen_js_api_ppx.mli
+++ gen_js_api-1.0.6/ppx-lib/gen_js_api_ppx.mli
@@ -2,7 +2,7 @@
 (* See the attached LICENSE file.                                         *)
 (* Copyright 2015 by LexiFi.                                              *)
 
-val mark_as_handled_manually : (Migrate_parsetree.Ast_411.Parsetree.attribute -> unit) ref
+val mark_as_handled_manually : (Migrate_parsetree.Ast_412.Parsetree.attribute -> unit) ref
 
 val check_attribute : bool ref
 
