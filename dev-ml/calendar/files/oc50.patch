Index: calendar-2.04/configure.in
===================================================================
--- calendar-2.04.orig/configure.in
+++ calendar-2.04/configure.in
@@ -37,7 +37,8 @@
 
 # check for one particular file of the sources
 # ADAPT THE FOLLOWING LINE TO YOUR SOURCES!
-AC_INIT(src/date.ml)
+AC_INIT
+AC_CONFIG_SRCDIR([src/date.ml])
 
 # Check for Ocaml compilers
 
@@ -56,6 +57,7 @@ case $OCAMLVERSION in
   3.0*) echo "${ECHO_T}Unsupported version!"; exit 2;;
   3.*) OCAMLMAJOR=3; echo "${ECHO_T}Good!";;
   4.*) OCAMLMAJOR=4; echo "${ECHO_T}Good!";;
+  5.*) OCAMLMAJOR=5; echo "${ECHO_T}Good!";;
   *) echo "${ECHO_T}Unsupported version!"; exit 2;;
 esac
 
@@ -207,5 +209,6 @@ AC_SUBST(LIBEXT)
 AC_SUBST(HAS_NATDYNLINK)
 
 # Finally create the Makefile from Makefile.in
-AC_OUTPUT(Makefile)
+AC_CONFIG_FILES([Makefile])
+AC_OUTPUT
 chmod a-w Makefile
Index: calendar-2.04/src/date.ml
===================================================================
--- calendar-2.04.orig/src/date.ml
+++ calendar-2.04/src/date.ml
@@ -70,7 +70,7 @@ let hash = Utils.Int.hash
 (* Constructors. *)
 
 let lt (d1 : int * int * int) (d2 : int * int * int) =
-  Pervasives.compare d1 d2 < 0
+  Stdlib.compare d1 d2 < 0
 
 (* [date_ok] returns [true] is the date belongs to the Julian period;
    [false] otherwise. *)
@@ -251,8 +251,8 @@ module Period = struct
 
   (* exactly equivalent to [Pervasives.compare] but more flexible typing *)
   let compare x y =
-    let n = Pervasives.compare x.m y.m in
-    if n = 0 then Pervasives.compare x.d y.d else n
+    let n = Stdlib.compare x.m y.m in
+    if n = 0 then Stdlib.compare x.d y.d else n
   let equal x y = compare x y = 0
   let hash = Hashtbl.hash
 
Index: calendar-2.04/src/printer.ml
===================================================================
--- calendar-2.04.orig/src/printer.ml
+++ calendar-2.04/src/printer.ml
@@ -181,7 +181,7 @@ struct
     let print_int pad k n = print_number fmt pad k (Lazy.force n) in
     let print_string pad s =
       let pad s = match pad with
-	| Uppercase -> String.uppercase s
+	| Uppercase -> String.uppercase_ascii s
 	| Empty | Zero | Blank -> s
       in
       Format.pp_print_string fmt (pad (Lazy.force s))
@@ -236,7 +236,7 @@ struct
 	| 'n' -> print_char '\n'
 	| 'p' -> print_string pad apm
 	| 'P' ->
-	    Format.pp_print_string fmt (String.lowercase (Lazy.force apm))
+	    Format.pp_print_string fmt (String.lowercase_ascii (Lazy.force apm))
 	| 'r' ->
 	    print_time pad shour;
 	    print_char ' ';
Index: calendar-2.04/src/utils.ml
===================================================================
--- calendar-2.04.orig/src/utils.ml
+++ calendar-2.04/src/utils.ml
@@ -29,8 +29,8 @@ end
 
 module Int = struct
   type t = int
-  let equal = Pervasives.(=)
-  let compare = Pervasives.compare
+  let equal = Stdlib.(=)
+  let compare = Stdlib.compare
   let hash = Hashtbl.hash
 end
 
