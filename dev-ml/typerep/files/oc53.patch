From 19548de9588ea5556ad90f61da9dd20bf81123b0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Adam=20Cholewi=C5=84ski?= <theadamcholewinski@gmail.com>
Date: Mon, 21 Oct 2024 16:03:36 +0200
Subject: [PATCH] OCaml 5.3 compatibility
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Implemented workaround presented in the issue: https://github.com/ocaml/ocaml/issues/13176

Signed-off-by: Adam Cholewi≈Ñski <theadamcholewinski@gmail.com>
---
 lib/typename.ml | 19 ++++++++++++-------
 1 file changed, 12 insertions(+), 7 deletions(-)

diff --git a/lib/typename.ml b/lib/typename.ml
index 09b61b4..bb581a6 100644
--- a/lib/typename.ml
+++ b/lib/typename.ml
@@ -191,8 +191,8 @@ struct
     | None -> None
     | Some (Data (name', data)) ->
       (fun (type b) (name' : b typename) (data : b X.t) ->
-        let Type_equal.T = (same_witness_exn name' name : (b, a) Type_equal.t) in
-        Some (data : a X.t))
+         let Type_equal.T = (same_witness_exn name' name : (b, a) Type_equal.t) in
+         Some (data : a X.t))
         name'
         data
   ;;
@@ -211,7 +211,8 @@ module Same_witness_exn_1 (A : S1) (B : S1) = struct
   let witness =
     let uid_a = uid (A.typename_of_t static) in
     let uid_b = uid (B.typename_of_t static) in
-    if Uid.equal uid_a uid_b then { eq = Obj.magic Type_equal.refl } else fail uid_a uid_b
+    let eq = Obj.magic Type_equal.refl in
+    if Uid.equal uid_a uid_b then { eq } else fail uid_a uid_b
   ;;
 end
 
@@ -221,7 +222,8 @@ module Same_witness_exn_2 (A : S2) (B : S2) = struct
   let witness =
     let uid_a = uid (A.typename_of_t static static) in
     let uid_b = uid (B.typename_of_t static static) in
-    if Uid.equal uid_a uid_b then { eq = Obj.magic Type_equal.refl } else fail uid_a uid_b
+    let eq = Obj.magic Type_equal.refl in
+    if Uid.equal uid_a uid_b then { eq } else fail uid_a uid_b
   ;;
 end
 
@@ -231,7 +233,8 @@ module Same_witness_exn_3 (A : S3) (B : S3) = struct
   let witness =
     let uid_a = uid (A.typename_of_t static static static) in
     let uid_b = uid (B.typename_of_t static static static) in
-    if Uid.equal uid_a uid_b then { eq = Obj.magic Type_equal.refl } else fail uid_a uid_b
+    let eq = Obj.magic Type_equal.refl in
+    if Uid.equal uid_a uid_b then { eq } else fail uid_a uid_b
   ;;
 end
 
@@ -241,7 +244,8 @@ module Same_witness_exn_4 (A : S4) (B : S4) = struct
   let witness =
     let uid_a = uid (A.typename_of_t static static static static) in
     let uid_b = uid (B.typename_of_t static static static static) in
-    if Uid.equal uid_a uid_b then { eq = Obj.magic Type_equal.refl } else fail uid_a uid_b
+    let eq = Obj.magic Type_equal.refl in
+    if Uid.equal uid_a uid_b then { eq } else fail uid_a uid_b
   ;;
 end
 
@@ -254,6 +258,7 @@ module Same_witness_exn_5 (A : S5) (B : S5) = struct
   let witness =
     let uid_a = uid (A.typename_of_t static static static static static) in
     let uid_b = uid (B.typename_of_t static static static static static) in
-    if Uid.equal uid_a uid_b then { eq = Obj.magic Type_equal.refl } else fail uid_a uid_b
+    let eq = Obj.magic Type_equal.refl in
+    if Uid.equal uid_a uid_b then { eq } else fail uid_a uid_b
   ;;
 end
