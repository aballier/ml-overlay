Index: ocaml-websocket-2.15/async/dune
===================================================================
--- ocaml-websocket-2.15.orig/async/dune
+++ ocaml-websocket-2.15/async/dune
@@ -10,4 +10,4 @@
  (public_name wscat-async)
  (package websocket-async)
  (modules wscat)
- (libraries uri.services logs-async-reporter websocket-async))
+ (libraries uri.services logs-async-reporter websocket-async core_unix.command_unix))
Index: ocaml-websocket-2.15/async/websocket_async.ml
===================================================================
--- ocaml-websocket-2.15.orig/async/websocket_async.ml
+++ ocaml-websocket-2.15/async/websocket_async.ml
@@ -124,7 +124,7 @@ let client_ez ?opcode ?(name = "websocke
     >>= fun () ->
     Pipe.write w
     @@ Frame.create ~opcode:Frame.Opcode.Ping
-         ~content:(Time_ns.to_string_fix_proto `Utc now)
+         ~content:(Time_ns_unix.to_string_fix_proto `Utc now)
          ()
     >>| fun () ->
     let time_since_last_pong = Time_ns.diff now !last_pong in
Index: ocaml-websocket-2.15/async/wscat.ml
===================================================================
--- ocaml-websocket-2.15.orig/async/wscat.ml
+++ ocaml-websocket-2.15/async/wscat.ml
@@ -93,8 +93,8 @@ let handle_client addr reader writer =
   Deferred.any
     [ ( server ~check_request ~app_to_ws ~ws_to_app ~reader ~writer ()
       >>= function
-      | Error err when Poly.equal (Error.to_exn err) Exit -> Deferred.unit
-      | Error err -> Error.raise err
+      | Error err when Poly.equal (Info.to_exn (Core.Error.to_info err)) Exit -> Deferred.unit
+      | Error err -> Core.Error.raise err
       | Ok () -> Deferred.unit ); loop () ]
 
 let command =
@@ -127,4 +127,4 @@ let command =
         >>= Tcp.Server.close_finished in
   Command.async_spec ~summary:"telnet-like interface to Websockets" spec run
 
-let () = Command.run command
+let () = Command_unix.run command
