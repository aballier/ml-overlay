From 6109246c172728e7534d924a760f02b32d3465ff Mon Sep 17 00:00:00 2001
From: Hannes Mehnert <hannes@mehnert.org>
Date: Fri, 7 Apr 2023 13:02:40 +0200
Subject: [PATCH] remove astring dependency

---
 ca-certs.opam   |  1 -
 lib/ca_certs.ml | 48 ++++++++++++++++++++++++++++++++++--------------
 lib/dune        |  2 +-
 3 files changed, 35 insertions(+), 16 deletions(-)

diff --git a/ca-certs.opam b/ca-certs.opam
index dcf1e3e..54a6d4b 100644
--- a/ca-certs.opam
+++ b/ca-certs.opam
@@ -16,7 +16,6 @@ doc: "https://mirage.github.io/ca-certs/doc"
 bug-reports: "https://github.com/mirage/ca-certs/issues"
 depends: [
   "dune" {>= "2.0"}
-  "astring"
   "bos"
   "fpath"
   "ptime"
diff --git a/lib/ca_certs.ml b/lib/ca_certs.ml
index 42c7de5..2a164d7 100644
--- a/lib/ca_certs.ml
+++ b/lib/ca_certs.ml
@@ -114,23 +114,43 @@ let authenticator ?crls ?allowed_hashes () =
      undecodable certificate - while we'd like to stay operational, and ignore
      some certificates *)
   let d = "-----" in
-  let sep = d ^ "END CERTIFICATE" ^ d in
-  let certs = Astring.String.cuts ~sep ~empty:false data in
-  let cas =
-    let affix = d ^ "BEGIN CERTIFICATE" ^ d in
-    List.fold_left
-      (fun acc data ->
-        if not (Astring.String.is_infix ~affix data) then acc
-        else
-          let data = data ^ sep in
-          match X509.Certificate.decode_pem (Cstruct.of_string data) with
-          | Ok ca -> ca :: acc
-          | Error (`Msg msg) ->
+  let new_cert = d ^ "BEGIN CERTIFICATE" ^ d
+  and end_of_cert = d ^ "END CERTIFICATE" ^ d
+  in
+  let len_new = String.length new_cert
+  and len_end = String.length end_of_cert
+  in
+  let lines = String.split_on_char '\n' data in
+  let it, cas =
+    List.fold_left (fun (acc, cas) line ->
+        match acc with
+        | None when
+            String.length line >= len_new &&
+            String.(equal (sub line 0 len_new) new_cert)
+          -> Some [line], cas
+        | None ->
+          Log.debug (fun m -> m "ignoring line %s" line);
+          None, cas
+        | Some lines
+          when
+            String.length line >= len_end &&
+            String.(equal (sub line 0 len_end) end_of_cert)
+          ->
+          let data = String.concat "\n" (List.rev (line :: lines)) in
+          begin match X509.Certificate.decode_pem (Cstruct.of_string data) with
+            | Ok ca -> None, ca :: cas
+            | Error (`Msg msg) ->
               Log.warn (fun m -> m "Failed to decode a trust anchor %s." msg);
               Log.debug (fun m -> m "Full certificate:@.%s" data);
-              acc)
-      [] certs
+              None, cas
+          end
+        | Some lines -> Some (line :: lines), cas)
+      (None, []) lines
   in
+  (match it with
+   | None -> ()
+   | Some lines -> Log.debug (fun m -> m "ignoring leftover data: %s"
+                                 (String.concat "\n" (List.rev lines))));
   let cas = List.rev cas in
   match cas with
   | [] -> Error (`Msg ("ca-certs: empty trust anchors.\n" ^ issue))
diff --git a/lib/dune b/lib/dune
index d15fe5b..d26277d 100644
--- a/lib/dune
+++ b/lib/dune
@@ -1,7 +1,7 @@
 (library
  (name ca_certs)
  (public_name ca-certs)
- (libraries mirage-crypto x509 astring bos fpath logs ptime.clock.os)
+ (libraries mirage-crypto x509 bos fpath logs ptime.clock.os)
  (foreign_stubs
   (language c)
   (names ca_certs_stubs))
