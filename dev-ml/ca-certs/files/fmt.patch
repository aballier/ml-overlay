From 36826dd108950cc41ff6ca553b07cbc947cfa107 Mon Sep 17 00:00:00 2001
From: Hannes Mehnert <hannes@mehnert.org>
Date: Sat, 8 Apr 2023 18:12:16 +0200
Subject: [PATCH] auto-format code

---
 .ocamlformat    |  2 +-
 ca-certs.opam   |  1 +
 lib/ca_certs.ml | 49 +++++++++++++++++++++++--------------------------
 3 files changed, 25 insertions(+), 27 deletions(-)

diff --git a/.ocamlformat b/.ocamlformat
index 923942f..f712ebd 100644
--- a/.ocamlformat
+++ b/.ocamlformat
@@ -1,2 +1,2 @@
-version = 0.23.0
+version = 0.25.1
 profile=conventional
diff --git a/ca-certs.opam b/ca-certs.opam
index 54a6d4b..dcf1e3e 100644
--- a/ca-certs.opam
+++ b/ca-certs.opam
@@ -16,6 +16,7 @@ doc: "https://mirage.github.io/ca-certs/doc"
 bug-reports: "https://github.com/mirage/ca-certs/issues"
 depends: [
   "dune" {>= "2.0"}
+  "astring"
   "bos"
   "fpath"
   "ptime"
diff --git a/lib/ca_certs.ml b/lib/ca_certs.ml
index 2a164d7..1585a9a 100644
--- a/lib/ca_certs.ml
+++ b/lib/ca_certs.ml
@@ -115,42 +115,39 @@ let authenticator ?crls ?allowed_hashes () =
      some certificates *)
   let d = "-----" in
   let new_cert = d ^ "BEGIN CERTIFICATE" ^ d
-  and end_of_cert = d ^ "END CERTIFICATE" ^ d
-  in
+  and end_of_cert = d ^ "END CERTIFICATE" ^ d in
   let len_new = String.length new_cert
-  and len_end = String.length end_of_cert
-  in
+  and len_end = String.length end_of_cert in
   let lines = String.split_on_char '\n' data in
   let it, cas =
-    List.fold_left (fun (acc, cas) line ->
+    List.fold_left
+      (fun (acc, cas) line ->
         match acc with
-        | None when
-            String.length line >= len_new &&
-            String.(equal (sub line 0 len_new) new_cert)
-          -> Some [line], cas
+        | None
+          when String.length line >= len_new
+               && String.(equal (sub line 0 len_new) new_cert) ->
+            (Some [ line ], cas)
         | None ->
-          Log.debug (fun m -> m "ignoring line %s" line);
-          None, cas
+            Log.debug (fun m -> m "ignoring line %s" line);
+            (None, cas)
         | Some lines
-          when
-            String.length line >= len_end &&
-            String.(equal (sub line 0 len_end) end_of_cert)
-          ->
-          let data = String.concat "\n" (List.rev (line :: lines)) in
-          begin match X509.Certificate.decode_pem (Cstruct.of_string data) with
-            | Ok ca -> None, ca :: cas
+          when String.length line >= len_end
+               && String.(equal (sub line 0 len_end) end_of_cert) -> (
+            let data = String.concat "\n" (List.rev (line :: lines)) in
+            match X509.Certificate.decode_pem (Cstruct.of_string data) with
+            | Ok ca -> (None, ca :: cas)
             | Error (`Msg msg) ->
-              Log.warn (fun m -> m "Failed to decode a trust anchor %s." msg);
-              Log.debug (fun m -> m "Full certificate:@.%s" data);
-              None, cas
-          end
-        | Some lines -> Some (line :: lines), cas)
+                Log.warn (fun m -> m "Failed to decode a trust anchor %s." msg);
+                Log.debug (fun m -> m "Full certificate:@.%s" data);
+                (None, cas))
+        | Some lines -> (Some (line :: lines), cas))
       (None, []) lines
   in
   (match it with
-   | None -> ()
-   | Some lines -> Log.debug (fun m -> m "ignoring leftover data: %s"
-                                 (String.concat "\n" (List.rev lines))));
+  | None -> ()
+  | Some lines ->
+      Log.debug (fun m ->
+          m "ignoring leftover data: %s" (String.concat "\n" (List.rev lines))));
   let cas = List.rev cas in
   match cas with
   | [] -> Error (`Msg ("ca-certs: empty trust anchors.\n" ^ issue))
