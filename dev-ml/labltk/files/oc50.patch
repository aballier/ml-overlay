Index: labltk-8.06.12/browser/main.ml
===================================================================
--- labltk-8.06.12.orig/browser/main.ml
+++ labltk-8.06.12/browser/main.ml
@@ -83,8 +83,6 @@ let _ =
       "<command>  Pipe sources through preprocessor <command>";
       "-rectypes", Arg.Set Clflags.recursive_types,
       " Allow arbitrary recursive types";
-      "-safe-string", Arg.Clear Clflags.unsafe_string,
-      " Make strings immutable";
       "-short-paths", Arg.Clear Clflags.real_paths, " Shorten paths in types";
       "-version", Arg.Unit print_version,
         " Print version and exit";
@@ -96,7 +94,7 @@ let _ =
   Arg.parse spec
     (fun name -> raise(Arg.Bad("don't know what to do with " ^ name)))
     errmsg;
-  Load_path.init
+  Load_path.init ~auto_include:Load_path.no_auto_include
     (Sys.getcwd ()
      :: List.rev_map ~f:(Misc.expand_directory Config.standard_library) !path
      @ [Config.standard_library]);
Index: labltk-8.06.12/browser/setpath.ml
===================================================================
--- labltk-8.06.12.orig/browser/setpath.ml
+++ labltk-8.06.12/browser/setpath.ml
@@ -31,7 +31,7 @@ let exec_update_hooks () =
       end
 
 let set_load_path l =
-  Load_path.init l;
+  Load_path.init l ~auto_include:Load_path.no_auto_include;
   exec_update_hooks ();
   Env.reset_cache ()
 
Index: labltk-8.06.12/browser/shell.ml
===================================================================
--- labltk-8.06.12.orig/browser/shell.ml
+++ labltk-8.06.12/browser/shell.ml
@@ -45,7 +45,7 @@ let dump_handle (h : Unix.file_descr) =
   let obj = Obj.repr h in
   if Obj.is_int obj || Obj.tag obj <> Obj.custom_tag then
     invalid_arg "Shell.dump_handle";
-  Nativeint.format "%x" (Obj.obj obj)
+  Printf.sprintf "%nx" (Obj.obj obj)
 
 (* The shell class. Now encapsulated *)
 
