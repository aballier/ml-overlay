Index: js_of_ocaml-4.0.0/compiler/lib/instr.ml
===================================================================
--- js_of_ocaml-4.0.0.orig/compiler/lib/instr.ml
+++ js_of_ocaml-4.0.0/compiler/lib/instr.ml
@@ -198,7 +198,7 @@ let ops =
   let if_v407 =
     match Ocaml_version.v with
     | `V4_04 | `V4_06 -> fun _ -> K_will_not_happen
-    | `V4_07 | `V4_08 | `V4_09 | `V4_10 | `V4_11 | `V4_12 | `V4_13 | `V4_14 -> fun k -> k
+    | `V4_07 | `V4_08 | `V4_09 | `V4_10 | `V4_11 | `V4_12 | `V4_13 | `V4_14 | `V5_00 -> fun k -> k
   in
   let instrs =
     [| ACC0, KNullary, "ACC0"
Index: js_of_ocaml-4.0.0/compiler/lib/magic_number.ml
===================================================================
--- js_of_ocaml-4.0.0.orig/compiler/lib/magic_number.ml
+++ js_of_ocaml-4.0.0/compiler/lib/magic_number.ml
@@ -76,6 +76,7 @@ let current_exe =
     | `V4_12 -> 29
     | `V4_13 -> 30
     | `V4_14 -> 31
+    | `V5_00 -> 32
   in
   "Caml1999X", v
 
@@ -92,6 +93,7 @@ let current_cmo =
     | `V4_12 -> 29
     | `V4_13 -> 30
     | `V4_14 -> 31
+    | `V5_00 -> 32
   in
   "Caml1999O", v
 
@@ -108,6 +110,7 @@ let current_cma =
     | `V4_12 -> 29
     | `V4_13 -> 30
     | `V4_14 -> 31
+    | `V5_00 -> 32
   in
   "Caml1999A", v
 
Index: js_of_ocaml-4.0.0/compiler/lib/ocaml_version.ml
===================================================================
--- js_of_ocaml-4.0.0.orig/compiler/lib/ocaml_version.ml
+++ js_of_ocaml-4.0.0/compiler/lib/ocaml_version.ml
@@ -76,6 +76,7 @@ let v =
   | 4 :: 12 :: _ -> `V4_12
   | 4 :: 13 :: _ -> `V4_13
   | 4 :: 14 :: _ -> `V4_14
+  | 5 :: 0  :: _ -> `V5_00
   | _ ->
       if compare current [ 4; 4 ] < 0
       then failwith "OCaml version unsupported. Upgrade to OCaml 4.04 or newer."
Index: js_of_ocaml-4.0.0/compiler/lib/ocaml_version.mli
===================================================================
--- js_of_ocaml-4.0.0.orig/compiler/lib/ocaml_version.mli
+++ js_of_ocaml-4.0.0/compiler/lib/ocaml_version.mli
@@ -35,4 +35,5 @@ val v :
   | `V4_12 (* OCaml 4.12 *)
   | `V4_13 (* OCaml 4.13 *)
   | `V4_14 (* OCaml 4.14 *)
+  | `V5_00
   ]
Index: js_of_ocaml-4.0.0/compiler/lib/parse_bytecode.ml
===================================================================
--- js_of_ocaml-4.0.0.orig/compiler/lib/parse_bytecode.ml
+++ js_of_ocaml-4.0.0/compiler/lib/parse_bytecode.ml
@@ -755,7 +755,7 @@ let method_cache_id = ref 1
 let new_closure_repr =
   match Ocaml_version.v with
   | `V4_04 | `V4_06 | `V4_07 | `V4_08 | `V4_09 | `V4_10 | `V4_11 -> false
-  | `V4_12 | `V4_13 | `V4_14 -> true
+  | `V4_12 | `V4_13 | `V4_14 | `V5_00 -> true
 
 let clo_offset_3 = if new_closure_repr then 3 else 2
 
@@ -2132,7 +2132,7 @@ let parse_bytecode code globals debug_da
 
 let override_global =
   match Ocaml_version.v with
-  | `V4_13 | `V4_14 -> []
+  | `V4_13 | `V4_14 | `V5_00 -> []
   | `V4_04 | `V4_06 | `V4_07 | `V4_08 | `V4_09 | `V4_10 | `V4_11 | `V4_12 ->
       let jsmodule name func =
         Prim (Extern "%overrideMod", [ Pc (NativeString name); Pc (NativeString func) ])
