From bfc4120591476d3861b956ae12d3b51aa81a0069 Mon Sep 17 00:00:00 2001
From: Hugo Heuzard <hugo.heuzard@gmail.com>
Date: Fri, 21 Jun 2024 12:53:41 +0200
Subject: [PATCH] fix compilation with trunk

---
 compiler/lib-runtime-files/gen/gen.ml              | 14 +++++++++-----
 .../js_of_ocaml_compiler_runtime_files.ml          |  2 +-
 compiler/lib/effects.ml                            | 12 ++++++------
 compiler/lib/magic_number.ml                       |  3 ++-
 4 files changed, 18 insertions(+), 13 deletions(-)

diff --git a/compiler/lib-runtime-files/gen/gen.ml b/compiler/lib-runtime-files/gen/gen.ml
index c8a32f1044..bdf330f4e8 100644
--- a/compiler/lib-runtime-files/gen/gen.ml
+++ b/compiler/lib-runtime-files/gen/gen.ml
@@ -31,11 +31,15 @@ let read_file f =
     failwith (Printf.sprintf "Cannot read content of %s.\n%s" f (Printexc.to_string e))
 
 let to_ident s =
-  String.map (String.uncapitalize_ascii s) ~f:(function
-      | 'a' .. 'z' as c -> c
-      | 'A' .. 'Z' as c -> c
-      | '0' .. '9' as c -> c
-      | _ -> '_')
+  match
+    String.map (String.uncapitalize_ascii s) ~f:(function
+        | 'a' .. 'z' as c -> c
+        | 'A' .. 'Z' as c -> c
+        | '0' .. '9' as c -> c
+        | _ -> '_')
+  with
+  | "effect" -> "effect_"
+  | x -> x
 
 let rec list_product l =
   match l with
diff --git a/compiler/lib-runtime-files/js_of_ocaml_compiler_runtime_files.ml b/compiler/lib-runtime-files/js_of_ocaml_compiler_runtime_files.ml
index 3f3b9dc06d..22ebd08bbf 100644
--- a/compiler/lib-runtime-files/js_of_ocaml_compiler_runtime_files.ml
+++ b/compiler/lib-runtime-files/js_of_ocaml_compiler_runtime_files.ml
@@ -54,7 +54,7 @@ let runtime =
     ; domain
     ; prng
     ; sync
-    ; effect
+    ; effect_
     ; zstd
     ; runtime_events
     ; blake2
diff --git a/compiler/lib/effects.ml b/compiler/lib/effects.ml
index 97abfcf635..2bec0c8bc1 100644
--- a/compiler/lib/effects.ml
+++ b/compiler/lib/effects.ml
@@ -516,11 +516,11 @@ let cps_block ~st ~k pc block =
   in
 
   let rewrite_instr x e loc =
-    let perform_effect ~effect ~continuation loc =
+    let perform_effect ~effect_ ~continuation loc =
       Some
         (fun ~k ->
           let e =
-            Prim (Extern "caml_perform_effect", [ Pv effect; continuation; Pv k ])
+            Prim (Extern "caml_perform_effect", [ Pv effect_; continuation; Pv k ])
           in
           let x = Var.fresh () in
           [ Let (x, e), loc ], (Return x, loc))
@@ -546,10 +546,10 @@ let cps_block ~st ~k pc block =
               ~f
               [ arg; k' ]
               loc)
-    | Prim (Extern "%perform", [ Pv effect ]) ->
-        perform_effect ~effect ~continuation:(Pc (Int 0l)) loc
-    | Prim (Extern "%reperform", [ Pv effect; continuation ]) ->
-        perform_effect ~effect ~continuation loc
+    | Prim (Extern "%perform", [ Pv effect_ ]) ->
+        perform_effect ~effect_ ~continuation:(Pc (Int 0l)) loc
+    | Prim (Extern "%reperform", [ Pv effect_; continuation ]) ->
+        perform_effect ~effect_ ~continuation loc
     | _ -> None
   in
 
diff --git a/compiler/lib/magic_number.ml b/compiler/lib/magic_number.ml
index d78ac3ca37..e476410004 100644
--- a/compiler/lib/magic_number.ml
+++ b/compiler/lib/magic_number.ml
@@ -77,11 +77,12 @@ let v =
   | 5 :: 00 :: _ -> 32
   | 5 :: 01 :: _ -> 33
   | 5 :: 02 :: _ -> 34
+  | 5 :: 03 :: _ -> 35
   | _ ->
       if Ocaml_version.compare current [ 4; 8 ] < 0
       then failwith "OCaml version unsupported. Upgrade to OCaml 4.08 or newer."
       else (
-        assert (Ocaml_version.compare current [ 5; 3 ] >= 0);
+        assert (Ocaml_version.compare current [ 5; 4 ] >= 0);
         failwith "OCaml version unsupported. Upgrade js_of_ocaml.")
 
 let current_exe = "Caml1999X", v
