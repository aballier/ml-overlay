From 9e53a6eb711c010daa331120eb826c54b15696ce Mon Sep 17 00:00:00 2001
From: Kate <kit.ty.kate@disroot.org>
Date: Mon, 9 Nov 2020 14:46:44 +0000
Subject: [PATCH] Add support for OCaml 4.12 (#1067)

* Add support for OCaml 4.12

* Add missing runtime checks

* Runtime: missing primititves

* fmt

* Misc: cleanup

* Changes

Co-authored-by: Hugo Heuzard <hugo.heuzard@gmail.com>
---
 .ocamlformat                   | 2 +-
 CHANGES.md                     | 4 ++++
 compiler/lib/instr.ml          | 2 +-
 compiler/lib/magic_number.ml   | 3 +++
 compiler/lib/ocaml_compiler.ml | 3 ++-
 compiler/lib/ocaml_version.ml  | 4 +++-
 compiler/lib/ocaml_version.mli | 3 ++-
 compiler/lib/parse_bytecode.ml | 2 +-
 runtime/sys.js                 | 5 +++++
 9 files changed, 22 insertions(+), 6 deletions(-)

diff --git a/compiler/lib/instr.ml b/compiler/lib/instr.ml
index a8fd5d8413..3718eb30e7 100644
--- a/compiler/lib/instr.ml
+++ b/compiler/lib/instr.ml
@@ -198,7 +198,7 @@ let ops =
   let if_v407 =
     match Ocaml_version.v with
     | `V4_02 | `V4_03 | `V4_04 | `V4_06 -> fun _ -> K_will_not_happen
-    | `V4_07 | `V4_08 | `V4_09 | `V4_10 | `V4_11 -> fun k -> k
+    | `V4_07 | `V4_08 | `V4_09 | `V4_10 | `V4_11 | `V4_12 -> fun k -> k
   in
   let instrs =
     [| ACC0, KNullary, "ACC0"
diff --git a/compiler/lib/magic_number.ml b/compiler/lib/magic_number.ml
index 35dcabd2fc..cb25100837 100644
--- a/compiler/lib/magic_number.ml
+++ b/compiler/lib/magic_number.ml
@@ -73,6 +73,7 @@ let current_exe =
     | `V4_09 -> 26
     | `V4_10 -> 27
     | `V4_11 -> 28
+    | `V4_12 -> 29
   in
   "Caml1999X", v
 
@@ -87,6 +88,7 @@ let current_cmo =
     | `V4_09 -> 26
     | `V4_10 -> 27
     | `V4_11 -> 28
+    | `V4_12 -> 29
   in
   "Caml1999O", v
 
@@ -101,6 +103,7 @@ let current_cma =
     | `V4_09 -> 26
     | `V4_10 -> 27
     | `V4_11 -> 28
+    | `V4_12 -> 29
   in
   "Caml1999A", v
 
diff --git a/compiler/lib/ocaml_compiler.ml b/compiler/lib/ocaml_compiler.ml
index 27666de189..d719a2ec5d 100644
--- a/compiler/lib/ocaml_compiler.ml
+++ b/compiler/lib/ocaml_compiler.ml
@@ -39,7 +39,8 @@ let rec constant_of_const : _ -> Code.constant =
   | ((Const_block (tag, _, l))[@if BUCKLESCRIPT]) ->
       let l = Array.of_list (List.map l ~f:constant_of_const) in
       Tuple (tag, l, Unknown)
-  | ((Const_pointer i)[@ifnot BUCKLESCRIPT]) -> Int (Int32.of_int_warning_on_overflow i)
+  | ((Const_pointer i)[@ifnot BUCKLESCRIPT] [@if ocaml_version < (4, 12, 0)]) ->
+      Int (Int32.of_int_warning_on_overflow i)
   | ((Const_block (tag, l))[@ifnot BUCKLESCRIPT]) ->
       let l = Array.of_list (List.map l ~f:constant_of_const) in
       Tuple (tag, l, Unknown)
diff --git a/compiler/lib/ocaml_version.ml b/compiler/lib/ocaml_version.ml
index a36369d860..a55ed4e678 100644
--- a/compiler/lib/ocaml_version.ml
+++ b/compiler/lib/ocaml_version.ml
@@ -57,4 +57,6 @@ let v =
   then `V4_09
   else if compare current [ 4; 11 ] < 0
   then `V4_10
-  else `V4_11
+  else if compare current [ 4; 12 ] < 0
+  then `V4_11
+  else `V4_12
diff --git a/compiler/lib/ocaml_version.mli b/compiler/lib/ocaml_version.mli
index 00d0e35f3f..2c398ba0b6 100644
--- a/compiler/lib/ocaml_version.mli
+++ b/compiler/lib/ocaml_version.mli
@@ -33,5 +33,6 @@ val v :
   | `V4_08 (* OCaml 4.08 *)
   | `V4_09 (* OCaml 4.09 *)
   | `V4_10 (* OCaml 4.10 *)
-  | `V4_11 (* OCaml 4.10 *)
+  | `V4_11 (* OCaml 4.11 *)
+  | `V4_12 (* OCaml 4.12 *)
   ]
diff --git a/compiler/lib/parse_bytecode.ml b/compiler/lib/parse_bytecode.ml
index ec2677ea37..53185784f9 100644
--- a/compiler/lib/parse_bytecode.ml
+++ b/compiler/lib/parse_bytecode.ml
@@ -749,10 +749,10 @@ let compiled_blocks = ref Addr.Map.empty
 let method_cache_id = ref 1
 
 let new_closure_repr =
-  (* true starting with 4.12 *)
   match Ocaml_version.v with
   | `V4_02 | `V4_03 | `V4_04 | `V4_06 | `V4_07 | `V4_08 | `V4_09 | `V4_10 | `V4_11 ->
       false
+  | `V4_12 -> true
 
 type compile_info =
   { blocks : Blocks.u
diff --git a/runtime/sys.js b/runtime/sys.js
index 8e85c05fe0..1317478004 100644
--- a/runtime/sys.js
+++ b/runtime/sys.js
@@ -230,6 +230,11 @@ function caml_spacetime_enabled(_unit) {
   return 0;
 }
 
+//Provides: caml_sys_const_naked_pointers_checked const (const)
+function caml_sys_const_naked_pointers_checked(_unit) {
+  return 0;
+}
+
 //Provides: caml_register_channel_for_spacetime const (const)
 function caml_register_channel_for_spacetime(_channel) {
   return 0;
