Index: ocaml-cohttp-5.0.0/cohttp-async/test/test_async_integration.ml
===================================================================
--- ocaml-cohttp-5.0.0.orig/cohttp-async/test/test_async_integration.ml
+++ ocaml-cohttp-5.0.0/cohttp-async/test/test_async_integration.ml
@@ -82,7 +82,7 @@ let ts =
         |> Deferred.List.iter ~f:(fun (_resp, body) ->
                let expected_body = body_q |> Queue.dequeue_exn in
                body |> Body.to_string >>| fun body ->
-               assert_equal ~printer expected_body body)
+               assert_equal ~printer expected_body body) ~how:`Sequential
       in
       let large_chunked_response () =
         Client.get ~headers uri >>= fun (resp, body) ->
@@ -113,7 +113,7 @@ let ts =
         in
         Deferred.List.iter tests ~f:(fun (msg, pipe, expected) ->
             is_empty (`Pipe pipe) >>| fun real ->
-            assert_equal ~msg expected real)
+            assert_equal ~msg expected real) ~how:`Sequential
         >>= fun () ->
         let b = Pipe.of_list [ ""; ""; "foo"; "bar" ] in
         is_empty (`Pipe b) >>= fun _ ->
Index: ocaml-cohttp-5.0.0/examples/async/dune
===================================================================
--- ocaml-cohttp-5.0.0.orig/examples/async/dune
+++ ocaml-cohttp-5.0.0/examples/async/dune
@@ -1,6 +1,6 @@
 (executables
  (names hello_world receive_post)
- (libraries mirage-crypto cohttp-async base async_kernel))
+ (libraries mirage-crypto cohttp-async base async_kernel core_unix.command_unix))
 
 (alias
  (name runtest)
Index: ocaml-cohttp-5.0.0/examples/async/hello_world.ml
===================================================================
--- ocaml-cohttp-5.0.0.orig/examples/async/hello_world.ml
+++ ocaml-cohttp-5.0.0/examples/async/hello_world.ml
@@ -35,4 +35,4 @@ let () =
            (optional_with_default 8080 int)
            ~doc:"int Source port to listen on")
     start_server
-  |> Command.run
+  |> Command_unix.run
Index: ocaml-cohttp-5.0.0/examples/async/receive_post.ml
===================================================================
--- ocaml-cohttp-5.0.0.orig/examples/async/receive_post.ml
+++ ocaml-cohttp-5.0.0/examples/async/receive_post.ml
@@ -28,4 +28,4 @@ let () =
            (optional_with_default 8080 int)
            ~doc:"int Source port to listen on")
     start_server
-  |> Command.run
+  |> Command_unix.run
